"use strict";(self.webpackChunkroys_blog=self.webpackChunkroys_blog||[]).push([[8862],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),i=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=i(e.components);return a.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=i(t),m=r,g=d["".concat(c,".").concat(m)]||d[m]||p[m]||o;return t?a.createElement(g,l(l({ref:n},u),{},{components:t})):a.createElement(g,l({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var i=2;i<o;i++)l[i]=t[i];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1007:(e,n,t)=>{t.d(n,{Z:()=>d});var a=t(7294);const r="browserWindow_my1Q",o="browserWindowHeader_jXSR",l="buttons_uHc7",s="browserWindowAddressBar_Pd8y",c="dot_giz1",i="browserWindowMenuIcon_Vhuh",u="bar_rrRL",p="browserWindowBody_Idgs";function d(e){let{children:n,minHeight:t,url:d="http://localhost:3000"}=e;return a.createElement("div",{className:r,style:{minHeight:t}},a.createElement("div",{className:o},a.createElement("div",{className:l},a.createElement("span",{className:c,style:{background:"#f25f58"}}),a.createElement("span",{className:c,style:{background:"#fbbe3c"}}),a.createElement("span",{className:c,style:{background:"#58cb42"}})),a.createElement("div",{className:s},d),a.createElement("div",{className:i},a.createElement("div",null,a.createElement("span",{className:u}),a.createElement("span",{className:u}),a.createElement("span",{className:u})))),a.createElement("div",{className:p},n))}},2713:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>g,frontMatter:()=>c,metadata:()=>u,toc:()=>d});var a=t(7462),r=(t(7294),t(3905)),o=t(4996),l=t(941),s=t(1007);const c={id:"solana-vscode-hello",title:"1\u3001\u4f7f\u7528VS Code\u5f00\u53d1\u5408\u7ea6"},i=void 0,u={unversionedId:"solana/solana-bootcamp/6\u3001Solana\u5408\u7ea6\u5f00\u53d1Part2/solana-vscode-hello",id:"solana/solana-bootcamp/6\u3001Solana\u5408\u7ea6\u5f00\u53d1Part2/solana-vscode-hello",title:"1\u3001\u4f7f\u7528VS Code\u5f00\u53d1\u5408\u7ea6",description:"\u5728\u524d\u9762\u7684\u57fa\u7840\u4e2d\uff0c\u5df2\u7ecf\u5b89\u88c5\u597d\u4e86 rust \u548c solana cli\u3002\u9996\u5148\u786e\u5b9a rust \u7248\u672c:",source:"@site/docs/solana/solana-bootcamp/6\u3001Solana\u5408\u7ea6\u5f00\u53d1Part2/1\u3001\u4f7f\u7528VS Code\u5f00\u53d1\u5408\u7ea6.md",sourceDirName:"solana/solana-bootcamp/6\u3001Solana\u5408\u7ea6\u5f00\u53d1Part2",slug:"/solana/solana-bootcamp/6\u3001Solana\u5408\u7ea6\u5f00\u53d1Part2/solana-vscode-hello",permalink:"/docs/solana/solana-bootcamp/6\u3001Solana\u5408\u7ea6\u5f00\u53d1Part2/solana-vscode-hello",draft:!1,editUrl:"https://github.com/iRoySwift/RoysBlog/tree/master/docs/solana/solana-bootcamp/6\u3001Solana\u5408\u7ea6\u5f00\u53d1Part2/1\u3001\u4f7f\u7528VS Code\u5f00\u53d1\u5408\u7ea6.md",tags:[],version:"current",frontMatter:{id:"solana-vscode-hello",title:"1\u3001\u4f7f\u7528VS Code\u5f00\u53d1\u5408\u7ea6"},sidebar:"docs",previous:{title:"6\u3001Solana\u5408\u7ea6\u5f00\u53d1Part.2",permalink:"/docs/category/6solana\u5408\u7ea6\u5f00\u53d1part2"},next:{title:"2\u3001PDA\u8d26\u53f7",permalink:"/docs/solana/solana-bootcamp/6\u3001Solana\u5408\u7ea6\u5f00\u53d1Part2/solana-pda"}},p={},d=[{value:"\u5b89\u88c5 VS Code",id:"\u5b89\u88c5-vs-code",level:2},{value:"\u521b\u5efa\u5de5\u7a0b",id:"\u521b\u5efa\u5de5\u7a0b",level:2},{value:"\u6784\u5efa\u4e0e\u53d1\u5e03",id:"\u6784\u5efa\u4e0e\u53d1\u5e03",level:2},{value:"Rust \u5ba2\u6237\u7aef\u6d4b\u8bd5",id:"rust-\u5ba2\u6237\u7aef\u6d4b\u8bd5",level:2},{value:"JEST \u6d4b\u8bd5",id:"jest-\u6d4b\u8bd5",level:2}],m={toc:d};function g(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"\u5728\u524d\u9762\u7684\u57fa\u7840\u4e2d\uff0c\u5df2\u7ecf\u5b89\u88c5\u597d\u4e86 rust \u548c solana cli\u3002\u9996\u5148\u786e\u5b9a rust \u7248\u672c:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"rustc --version\nrustc 1.70.0 (90c541806 2023-05-31)\n")),(0,r.kt)("p",null,"\u5982\u679c\u6ca1\u6709\u5b89\u88c5\uff0c\u53ef\u4ee5\u901a\u8fc7\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n\nCurrent installation options:\n\n\ndefault host triple: x86_64-apple-darwin\n    default toolchain: stable (default)\n            profile: default\nmodify PATH variable: yes\n\n1) Proceed with installation (default)\n2) Customize installation\n3) Cancel installation\n\n\u76f4\u63a5Enter\u91c7\u7528\u9ed8\u8ba4\u65b9\u5f0f\n\nRust is installed now. Great!\n\nTo get started you may need to restart your current shell.\nThis would reload your PATH environment variable to include\nCargo's bin directory ($HOME/.cargo/bin).\n\nTo configure your current shell, run:\nsource \"$HOME/.cargo/env\"\n")),(0,r.kt)("p",null,"\u8fd9\u91cc\u6267\u884c\u4e0b\u73af\u5883\u5bfc\u5165"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},'source "$HOME/.cargo/env"\n')),(0,r.kt)("p",null,"\u5728\u6b64\u786e\u5b9a\u4e0b solana \u7684\u7248\u672c\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"solana --version\nsolana-cli 1.16.4 (src:4ce8fe76; feat:2891131721, client:SolanaLabs)\n")),(0,r.kt)("p",null,"\u5982\u679c\u8fd9\u91cc\u7684 cli \u662f 1.14.x \u4e3a\u5f53\u524d\u7684\u4e3b\u7f51\u7248\u672c\uff0c\u6211\u4eec\u7684\u64cd\u4f5c\u90fd\u662f\u5728\u6d4b\u8bd5\u73af\u5883\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u5207\u6362\u8981\u5207\u6362\u5230\u6d4b\u8bd5 \u73af\u5883\u7684 1.16 \u7248\u672c:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"solana-install init 1.16.4\n")),(0,r.kt)("h2",{id:"\u5b89\u88c5-vs-code"},"\u5b89\u88c5 VS Code"),(0,r.kt)("p",null,"\u6253\u5f00 VS Code \u7684\u9875\u9762\uff0c\u6839\u636e\u81ea\u5df1\u7684\u7cfb\u7edf\u9009\u62e9\u4e0b\u8f7d\u5bf9\u5e94\u7684\u7248\u672c\u3002 \u8981\u5148\u5b89\u88c5\u597d rust\uff0c\u7136\u540e\u518d\u5b89\u88c5 VC Code \u7684\u63d2\u4ef6\u3002VS Code \u5b89\u88c5\u597d\u540e\uff0c\u6253\u5f00 VS Code\uff0c\u7136\u540e\u518d\u63d2\u4ef6\u7684\u5730\u65b9 \u5b89\u88c5 rust-analyzer\uff1a"),(0,r.kt)(s.Z,{minHeight:240,mdxType:"BrowserWindow"},(0,r.kt)(l.Z,{alt:"Docusaurus themed image",sources:{light:(0,o.Z)("/img/solana/rust_analyzer.png"),dark:(0,o.Z)("/img/solana/rust_analyzer.png")},mdxType:"ThemedImage"})),(0,r.kt)("h2",{id:"\u521b\u5efa\u5de5\u7a0b"},"\u521b\u5efa\u5de5\u7a0b"),(0,r.kt)("p",null,"\u5728\u81ea\u5df1\u7684\u5de5\u4f5c\u76ee\u5f55\u4e0b\uff0c\u7528 cargo \u521b\u5efa\u4e00\u4e2a\u5de5\u7a0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"cargo new  --lib helloworld\n")),(0,r.kt)("p",null,"\u7136\u540e\u8fdb\u5165\u5230 helloworld \u76ee\u5f55\u4e0b\uff0c\u6dfb\u52a0 solana SDK \u7684\u4f9d\u8d56\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"cargo add solana-program\nUpdating `tuna` index\nAdding solana-program v1.16.5 to dependencies.\n")),(0,r.kt)("h2",{id:"\u6784\u5efa\u4e0e\u53d1\u5e03"},"\u6784\u5efa\u4e0e\u53d1\u5e03"),(0,r.kt)("p",null,"\u5728 src/lib.rs \u6587\u4ef6\u4e2d\uff0c\u586b\u5165\u5982\u4e0b\u5408\u7ea6\u4ee3\u7801\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust",metastring:'title="hello-world/native/program/src/lib.rs"',title:'"hello-world/native/program/src/lib.rs"'},"use solana_program::{\n    account_info::{AccountInfo, next_account_info},\n    entrypoint,\n    entrypoint::ProgramResult,\n    pubkey::Pubkey,\n    msg,\n};\n\n\n// Declare and export the program's entrypoint\nentrypoint!(process_instruction);\n\n// Program entrypoint's implementation\npub fn process_instruction(\n    _program_id: &Pubkey, // Public key of the account the hello world program was loaded into\n    accounts: &[AccountInfo], // The account to say hello to\n    _instruction_data: &[u8], // Ignored, all helloworld instructions are hellos\n) -> ProgramResult {\n\n    // Iterating accounts is safer than indexing\n    let accounts_iter = &mut accounts.iter();\n\n    // Get the account to say hello to\n    let account = next_account_info(accounts_iter)?;\n\n    msg!(\"Hello World Rust program entrypoint from {}\", account.key);\n\n    Ok(())\n}\n")),(0,r.kt)("p",null,"\u5e76\u7ed9 Cargo.toml \u589e\u52a0\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},'[features]\nno-entrypoint = []\n\n[lib]\ncrate-type = ["cdylib", "lib"]\n')),(0,r.kt)("p",null,"\u7136\u540e\u6267\u884c\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"cargo build-sbf\nFinished release [optimized] target(s) in 0.23s\n")),(0,r.kt)("p",null,"\u8868\u793a\u8fd0\u884c\u6210\u529f\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u7528 solana cli \u6765\u8fdb\u884c\u53d1\u5e03\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"solana program deploy target/deploy/helloworld.so\nProgram Id: FbLTBNZmc77xJpf4whkr4t7vdctjsk8DBkfuksqtQ7g8\n")),(0,r.kt)("h2",{id:"rust-\u5ba2\u6237\u7aef\u6d4b\u8bd5"},"Rust \u5ba2\u6237\u7aef\u6d4b\u8bd5"),(0,r.kt)("p",null,"\u6211\u4eec\u5728\u65b0\u5efa\u4e00\u4e2a cli \u7684 bin \u5de5\u7a0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"cargo new --bin cli\nCreated binary (application) `cli` package\n")),(0,r.kt)("p",null,"\u7136\u540e\u518d main.rs \u91cc\u9762\u6dfb\u52a0\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rs",metastring:'title="hello-world/native/cli/src/main.rs"',title:'"hello-world/native/cli/src/main.rs"'},'use std::str::FromStr;\n\nuse solana_sdk::signature::Signer;\nuse solana_rpc_client::rpc_client;\nuse solana_sdk::signer::keypair;\nuse solana_sdk::transaction;\nuse solana_program::instruction;\nuse solana_program::pubkey;\n\nconst RPC_ADDR: &str = "https://api.devnet.solana.com";\n\n\nfn main() {\n    let helloworld = pubkey::Pubkey::from_str("FbLTBNZmc77xJpf4whkr4t7vdctjsk8DBkfuksqtQ7g8").unwrap();\n\n    let me = keypair::Keypair::from_base58_string("VtqQ...xs8");\n    println!("me is {}", me.pubkey());\n\n    let client = rpc_client::RpcClient::new(RPC_ADDR);\n\n    let account_metas = vec![\n        instruction::AccountMeta::new(me.pubkey(), true),\n    ];\n\n    let instruction = instruction::Instruction::new_with_bytes(\n        helloworld,\n        "hello".as_bytes(),\n        account_metas,\n    );\n    let ixs = vec![instruction];\n\n    let latest_blockhash = client.get_latest_blockhash().unwrap();\n    let sig = client.send_and_confirm_transaction(&transaction::Transaction::new_signed_with_payer(\n        &ixs,\n        Some(&me.pubkey()),\n        &[&me],\n        latest_blockhash,\n    )).unwrap();\n\n    println!("tx:{}", sig);\n}\n')),(0,r.kt)("p",null,"\u6267\u884c\u540e\u53ef\u4ee5\u5f97\u5230\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"cargo run\nCompiling cli v0.1.0 (/Users/cz/repos/github.com/Gametaverse/Solana-Asia-Summer-2023/s101/Solana-Program-Part2/demo/helloworld/cli)\n    Finished dev [unoptimized + debuginfo] target(s) in 6.13s\n    Running `target/debug/cli`\nme is 5pWae6RxD3zrYzBmPTMYo1LZ5vef3vfWH6iV3s8n6ZRG\ntx:xosYkqqhHfD2xmcrqYXUQhkdTZiVUCMSc6QWazK25Li5Y4xebuG974vSvfVQCo9A7A7MZ6KQoNaKuTEb8YxXhYY\n")),(0,r.kt)("p",null,"\u901a\u8fc7\u67e5\u770b\u6d4f\u89c8\u5668\uff1a"),(0,r.kt)(s.Z,{minHeight:240,mdxType:"BrowserWindow"},(0,r.kt)(l.Z,{alt:"Docusaurus themed image",sources:{light:(0,o.Z)("/img/solana/helloworld.png"),dark:(0,o.Z)("/img/solana/helloworld.png")},mdxType:"ThemedImage"})),(0,r.kt)("h2",{id:"jest-\u6d4b\u8bd5"},"JEST \u6d4b\u8bd5"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="hello-world/native/src/tests/Hello.test.ts"',title:'"hello-world/native/src/tests/Hello.test.ts"'},'// No imports needed: web3, borsh, pg and more are globally available\n\nimport {\n    clusterApiUrl,\n    Connection,\n    Keypair,\n    PublicKey,\n    Transaction,\n    TransactionInstruction,\n    sendAndConfirmTransaction,\n} from "@solana/web3.js";\nimport dotenv from "dotenv";\n\ndotenv.config();\n\nconst PROGRAM_ID = "9eMNGtayMEuNkzfdUYSw8k9msaPhFJG9Bi75wGQDvddR";\n\n// keypair\nconst secretKeyArray = JSON.parse(process.env.PRIVATE_KEY || "[]") as number[];\n\n// Step 1 \u8fde\u63a5\u5230Solana\u7f51\u7edc devnet\nconst devnet = clusterApiUrl("devnet");\nconst connection = new Connection(process.env.DEVNET || devnet, "confirmed");\n\n// Step 2 \u521b\u5efa\u8005\u8d26\u53f7\u4fe1\u606f\uff08private key\uff09\nconst signer = Keypair.fromSecretKey(new Uint8Array(secretKeyArray));\n\nconst pg = {\n    connection,\n    PROGRAM_ID: new PublicKey(PROGRAM_ID),\n    wallet: {\n        keypair: signer,\n        publicKey: signer.publicKey,\n    },\n};\n\ndescribe("Test", () => {\n    it("greet", async () => {\n        // Create greetings account instruction\n\n        // Create greet instruction\n        const greetIx = new TransactionInstruction({\n            keys: [\n                {\n                    pubkey: pg.wallet.publicKey,\n                    isSigner: false,\n                    isWritable: true,\n                },\n            ],\n            programId: pg.PROGRAM_ID,\n        });\n\n        // Create transaction and add the instructions\n        const tx = new Transaction();\n        tx.add(greetIx);\n\n        // Send and confirm the transaction\n        const txHash = await sendAndConfirmTransaction(pg.connection, tx, [\n            pg.wallet.keypair,\n        ]);\n        console.log(`Use \'solana confirm -v ${txHash}\' to see the logs`);\n\n        // Fetch the greetings account\n        const greetingAccount = await pg.connection.getAccountInfo(\n            pg.wallet.publicKey\n        );\n\n        if (!greetingAccount) {\n            console.error("Don\'t get greeting information");\n            return;\n        }\n    }, 20000);\n});\n')),(0,r.kt)("p",null,"\u6267\u884c\u540e\u53ef\u4ee5\u5f97\u5230\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"yarn test\nyarn run v1.22.19\n$ jest --forceExit\n  console.log\n    Use 'solana confirm -v 5gCPEdxGpNc1UG1wpSscLfb7sjiGxjwHPnn6zMVvyDHeJNxuKA5x39VQwy8hUuAHFSSgDm1w7kSKvVRTeGZLmMDn' to see the logs\n\n      at Object.<anonymous> (src/tests/Hello.test.ts:61:17)\n\n PASS  src/tests/Hello.test.ts (9.951 s)\n  Test\n    \u2713 greet (8905 ms)\n\nTest Suites: 1 passed, 1 total\nTests:       1 passed, 1 total\nSnapshots:   0 total\nTime:        10.029 s\nRan all test suites.\nForce exiting Jest: Have you considered using `--detectOpenHandles` to detect async operations that kept running after all tests finished?\n\u2728  Done in 12.46s.\n")),(0,r.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\u8ddf\u4e4b\u524d\u7684 Playgroud \u80fd\u591f\u5f97\u5230\u4e00\u6837\u7684\u6548\u679c\u3002"))}g.isMDXComponent=!0}}]);