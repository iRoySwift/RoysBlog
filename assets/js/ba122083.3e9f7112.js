"use strict";(self.webpackChunkroys_blog=self.webpackChunkroys_blog||[]).push([[2235],{7510:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>o,frontMatter:()=>t,metadata:()=>a,toc:()=>d});var r=s(1527),l=s(7279);const t={id:"solana-rust-lang",title:"2\u3001Rust\u57fa\u672c\u8bed\u6cd5"},i=void 0,a={id:"solana/solana-bootcamp/4\u3001Rust\u57fa\u672c\u77e5\u8bc6/solana-rust-lang",title:"2\u3001Rust\u57fa\u672c\u8bed\u6cd5",description:"1\u3001\u53d8\u91cf\u548c\u7c7b\u578b",source:"@site/docs/solana/solana-bootcamp/4\u3001Rust\u57fa\u672c\u77e5\u8bc6/2\u3001Rust\u57fa\u672c\u8bed\u6cd5.md",sourceDirName:"solana/solana-bootcamp/4\u3001Rust\u57fa\u672c\u77e5\u8bc6",slug:"/solana/solana-bootcamp/4\u3001Rust\u57fa\u672c\u77e5\u8bc6/solana-rust-lang",permalink:"/docs/solana/solana-bootcamp/4\u3001Rust\u57fa\u672c\u77e5\u8bc6/solana-rust-lang",draft:!1,unlisted:!1,editUrl:"https://github.com/iRoySwift/RoysBlog/tree/master/docs/solana/solana-bootcamp/4\u3001Rust\u57fa\u672c\u77e5\u8bc6/2\u3001Rust\u57fa\u672c\u8bed\u6cd5.md",tags:[],version:"current",frontMatter:{id:"solana-rust-lang",title:"2\u3001Rust\u57fa\u672c\u8bed\u6cd5"},sidebar:"docs",previous:{title:"1\u3001Hello World",permalink:"/docs/solana/solana-bootcamp/4\u3001Rust\u57fa\u672c\u77e5\u8bc6/solana-rust-helloword"},next:{title:"3\u3001\u901a\u8fc7Cargo\u7ba1\u7406\u5de5\u7a0b",permalink:"/docs/solana/solana-bootcamp/4\u3001Rust\u57fa\u672c\u77e5\u8bc6/solana-cargo-manage"}},c={},d=[{value:"1\u3001\u53d8\u91cf\u548c\u7c7b\u578b",id:"1\u53d8\u91cf\u548c\u7c7b\u578b",level:2},{value:"\u57fa\u672c\u6570\u636e\u7c7b\u578b",id:"\u57fa\u672c\u6570\u636e\u7c7b\u578b",level:3},{value:"\u590d\u5408\u7c7b\u578b",id:"\u590d\u5408\u7c7b\u578b",level:3},{value:"\u53d8\u91cf",id:"\u53d8\u91cf",level:2},{value:"2\u3001\u8bed\u53e5\u548c\u8868\u8fbe\u5f0f",id:"2\u8bed\u53e5\u548c\u8868\u8fbe\u5f0f",level:2},{value:"let \u8868\u8fbe\u5f0f",id:"let-\u8868\u8fbe\u5f0f",level:3},{value:"match \u8868\u8fbe\u5f0f",id:"match-\u8868\u8fbe\u5f0f",level:3},{value:"\u6761\u4ef6 \u8bed\u53e5",id:"\u6761\u4ef6-\u8bed\u53e5",level:3},{value:"\u5faa\u73af\u8bed\u53e5",id:"\u5faa\u73af\u8bed\u53e5",level:3},{value:"3\u3001\u51fd\u6570",id:"3\u51fd\u6570",level:2},{value:"4\u3001struct \u548c enum",id:"4struct-\u548c-enum",level:2},{value:"struct",id:"struct",level:3},{value:"enum",id:"enum",level:3},{value:"\u7ed9 struct/enum \u5b9a\u4e49\u65b9\u6cd5",id:"\u7ed9-structenum-\u5b9a\u4e49\u65b9\u6cd5",level:3},{value:"5\u3001\u5bb9\u5668",id:"5\u5bb9\u5668",level:2},{value:"list/vector",id:"listvector",level:3},{value:"6\u3001String",id:"6string",level:2},{value:"7\u3001Map",id:"7map",level:2},{value:"8\u3001trait",id:"8trait",level:2},{value:"9\u3001\u6cdb\u578b",id:"9\u6cdb\u578b",level:2}];function u(n){const e={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{id:"1\u53d8\u91cf\u548c\u7c7b\u578b",children:"1\u3001\u53d8\u91cf\u548c\u7c7b\u578b"}),"\n",(0,r.jsx)(e.h3,{id:"\u57fa\u672c\u6570\u636e\u7c7b\u578b",children:"\u57fa\u672c\u6570\u636e\u7c7b\u578b"}),"\n",(0,r.jsx)(e.p,{children:"\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e3b\u8981\u6709\u6574\u5f62\u3001\u6d6e\u70b9\u3001\u5e03\u5c14\u4ee5\u53ca\u5b57\u7b26\u7c7b\u578b\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u6574\u5f62\u6309\u7167\u6240\u5360\u7a7a\u95f4\u5927\u5c0f\u88ab\u5206\u4e3a 1\u30012\u30014\u30018\u300116 \u5b57\u8282\u5927\u5c0f\u7684\u6574\u6570\u3002\u6bcf\u4e2a\u5927\u5c0f\u53c8\u6709\u6709\u7b26\u53f7\u548c\u65e0\u7b26\u53f7\u7684\u5dee\u522b\u3002 \u5177\u4f53\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a"}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"Length"}),(0,r.jsx)(e.th,{children:"Signed"}),(0,r.jsx)(e.th,{children:"Unsigned"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"8-bit"}),(0,r.jsx)(e.td,{children:"i8"}),(0,r.jsx)(e.td,{children:"u8"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"16-bit"}),(0,r.jsx)(e.td,{children:"i16"}),(0,r.jsx)(e.td,{children:"u16"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"32-bit"}),(0,r.jsx)(e.td,{children:"i32"}),(0,r.jsx)(e.td,{children:"u32"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"64-bit"}),(0,r.jsx)(e.td,{children:"i64"}),(0,r.jsx)(e.td,{children:"u64"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"128-bit"}),(0,r.jsx)(e.td,{children:"i128"}),(0,r.jsx)(e.td,{children:"u128"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"arch"}),(0,r.jsx)(e.td,{children:"isize"}),(0,r.jsx)(e.td,{children:"usize"})]})]})]}),"\n",(0,r.jsx)(e.p,{children:"\u800c\u6d6e\u70b9\u578b\u5305\u62ec f32 \u548c f64 \u4e24\u4e2a\u5206\u522b\u4f7f\u7528 4 \u5b57\u8282\u548c 8 \u5b57\u8282\u7684 IEEE-754 \u6d6e\u70b9\u683c\u5f0f\u7684\u6d6e\u70b9\u6570\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u5e03\u5c14\u7c7b\u578b\u548c\u5176\u4ed6\u8bed\u8a00\u7684\u5e03\u5c14\u7c7b\u578b\u7c7b\u4f3c\uff0c\u7528 true \u548c false \u6765\u8868\u793a\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u5b57\u7b26\u7c7b\u578b\u662f\u7528''\u5355\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u5b57\u7b26\u3002rust \u5929\u751f\u652f\u6301 utf-8,\u6240\u4ee5\u4efb\u4f55\u5355\u5f15\u53f7\u62ec\u8d77\u6765\u7684 utf-8 \u5b57\u7b26\u90fd\u662f\u5408\u6cd5\u7684\u5b57\u7b26\u7c7b\u578b\u53d8\u91cf\u3002"}),"\n",(0,r.jsx)(e.h3,{id:"\u590d\u5408\u7c7b\u578b",children:"\u590d\u5408\u7c7b\u578b"}),"\n",(0,r.jsx)(e.p,{children:"\u590d\u5408\u7c7b\u578b\u662f\u57fa\u672c\u7c7b\u578b\u548c\u590d\u5408\u7c7b\u578b\u7684\u7ec4\u5408\uff0c\u5178\u578b\u7684\u6709"}),"\n",(0,r.jsx)(e.p,{children:"\u5143\u7ec4\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"let tup: (i32, f64, u8) = (500, 6.4, 1);\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u5355\u7eaf\u7684\u628a\u51e0\u4e2a\u7c7b\u578b\u653e\u5728\u4e00\u8d77\u3002\u8bbf\u95ee\u7684\u65f6\u5019\u901a\u8fc7\u4e0b\u6807\u7d22\u5f15\u6765\u8bbf\u95ee \u6bd4\u5982 \u8fd9\u91cc\u7684 500\uff1atup.0"}),"\n",(0,r.jsx)(e.p,{children:"\u6570\u7ec4\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"let arr = [1, 2, 3, 4, 5];\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u548c\u5143\u7ec4\u4e0d\u901a\u7684\u662f\uff0c\u8fd9\u91cc\u6bcf\u4e2a\u5143\u7d20\u7684\u7c7b\u578b\u5fc5\u987b\u662f\u540c\u6837\u7684\u3002\u8bbf\u95ee\u7684\u65f6\u5019\uff0c\u4e0b\u6807\u7528\u4e2d\u62ec\u53f7\u8868\u793a: arr[0]"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'struct:\n\n    struct User {\n        active: bool,\n        username: String,\n        email: String,\n        sign_in_count: u64,\n    }\n\n    let user = User {\n        email: String::from("someone@example.com"),\n        username: String::from("someusername123"),\n        active: true,\n        sign_in_count: 1,\n    };\n'})}),"\n",(0,r.jsx)(e.p,{children:"struct \u7c7b\u4f3c C \u8bed\u8a00\u91cc\u7684 struct\uff0c\u5c06\u591a\u4e2a\u7c7b\u578b\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u901a\u8fc7\u6210\u5458\u540d\u8fdb\u884c\u8bbf\u95ee\uff1auser.email"}),"\n",(0,r.jsx)(e.h2,{id:"\u53d8\u91cf",children:"\u53d8\u91cf"}),"\n",(0,r.jsx)(e.p,{children:"\u53d8\u91cf\u5b9a\u4e49\u4e3a\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"let x = 5;\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u8fd9\u91cc x \u7684\u7c7b\u578b\u662f\u7531\u7cfb\u7edf\u63a8\u5230\u800c\u6765\u7684\u3002\u4e5f\u53ef\u4ee5\u663e\u793a\u6307\u5b9a\u7c7b\u578b"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"let x:u32 = 5;\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u8fd9\u91cc x \u88ab\u8d4b\u503c\u4e3a 5 \u540e\uff0c\u533a\u522b\u4e0e\u5176\u4ed6\u8bed\u8a00\u7684\u70b9\u3002\u53d8\u91cf\u9ed8\u8ba4\u662f\u4e0d\u53ef\u4ee5\u4fee\u6539\u7684\uff0c\u4e5f\u5c31\u662f\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"let x = 5;\n    x=6;\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u4f1a\u5bfc\u81f4\u62a5\u9519\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'error[E0384]: cannot assign twice to immutable variable `x`\n    --\x3e src/main.rs:4:5\n    |\n    2 |     let x = 5;\n    |         -\n    |         |\n    |         first assignment to `x`\n    |         help: consider making this binding mutable: `mut x`\n    3 |     println!("The value of x is: {x}");\n    4 |     x = 6;\n    |     ^^^^^ cannot assign twice to immutable variable\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u4f46\u662f\u53ef\u4ee5\u7528\u5982\u4e0b\u5f62\u5f0f\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"let x = 5;\nlet x = 6;\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u751a\u81f3\u5982\u4e0b\u5f62\u5f0f\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'let x = 5;\n    let x="6";\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u8fd9\u91cc\uff0c\u7b2c\u4e8c\u4e2a let \u76f8\u5f53\u4e8e\u91cd\u65b0\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\uff0c\u53ef\u4ee5\u91cd\u65b0\u5b9a\u4e49\u5176\u7c7b\u578b\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u5982\u679c\u8981\u4fee\u6539\u53d8\u91cf\uff0c\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"let mut x = 5;\n    x=5;\n"})}),"\n",(0,r.jsx)(e.h2,{id:"2\u8bed\u53e5\u548c\u8868\u8fbe\u5f0f",children:"2\u3001\u8bed\u53e5\u548c\u8868\u8fbe\u5f0f"}),"\n",(0,r.jsx)(e.p,{children:"\u8bed\u53e5\u662f\u6307\u6267\u884c\u4e00\u6bb5\u903b\u8f91\u52a8\u4f5c\u7684\u4ee3\u7801\uff0c\u6bd4\u5982 if \u8bed\u53e5\uff0cwhile \u8bed\u53e5\u3002\u800c\u8868\u8fbe\u5f0f\uff0c\u662f\u53ef\u4ee5\u5f97\u5230\u7ed3\u679c\u503c\u7684\u4ee3\u7801\u3002\u6bd4\u5982 1+1\u3002 \u867d\u7136\u8868\u8fbe\u5f0f\u4e5f\u53ef\u4ee5\u6267\u884c\u903b\u8f91\uff0c\u4f46\u662f\u533a\u522b\u662f\u8868\u8fbe\u5f0f\u53ef\u4ee5\u4f5c\u4e3a\u8fd4\u56de\u503c\uff0c\u6216\u8005\u522b\u7684\u53d8\u91cf\u7684\u8d4b\u503c\u3002\u800c\u8bed\u53e5\u4e0d\u884c\u3002"}),"\n",(0,r.jsx)(e.h3,{id:"let-\u8868\u8fbe\u5f0f",children:"let \u8868\u8fbe\u5f0f"}),"\n",(0,r.jsx)(e.p,{children:"let \u4e3b\u8981\u7528\u4e8e\u53d8\u91cf\u7684\u5b9a\u4e49\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"let condition = true;\n"})}),"\n",(0,r.jsx)(e.p,{children:"let \u8fd8\u53ef\u4ee5\u548c if \u7ec4\u5408\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'let number = if condition { 5 } else { "six" };\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u8fd9\u91cc if \u8bed\u53e5\u91cc\u9762\u7684\u503c\u7c7b\u4f3c\u8fd4\u56de\u503c\u3002"}),"\n",(0,r.jsx)(e.h3,{id:"match-\u8868\u8fbe\u5f0f",children:"match \u8868\u8fbe\u5f0f"}),"\n",(0,r.jsx)(e.p,{children:"match \u53ef\u4ee5\u505a\u7c7b\u578b\u5339\u914d\u548c\u89e3\u5305\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'let config_max = Some(3u8);\n    match config_max {\n        Some(max) => println!("The maximum is configured to be {}", max),\n        _ => (),\n    }\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u7b49\u540c\u4e8e\u4e0a\u9762\u7684 if let\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'let config_max = Some(3u8);\n    if let Some(max) = config_max {\n        println!("The maximum is configured to be {}", max);\n    }\n'})}),"\n",(0,r.jsx)(e.h3,{id:"\u6761\u4ef6-\u8bed\u53e5",children:"\u6761\u4ef6 \u8bed\u53e5"}),"\n",(0,r.jsx)(e.p,{children:"if \u548c Go \u8bed\u8a00\u7684 if \u6bd4\u8f83\u7c7b\u4f3c\uff0c\u90fd\u662f\u53bb\u9664\u4e86\u4f20\u7edf\u8bed\u8a00\u91cc\u9762\u7684\u62ec\u53f7"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'let number = 3;\n\n    if number < 5 {\n        println!("only if");\n    }\n\n    if number < 5 {\n        println!("if else: condition was true");\n    } else {\n        println!("if else: condition was false");\n    }\n\n    if number < 5 {\n        println!("if else if : number < 5 ");\n    } else if number == 5 {\n        println!("if else if : number == 5 ");\n    } else{\n        println!("if else if : number > 5 ");\n    }\n'})}),"\n",(0,r.jsx)(e.h3,{id:"\u5faa\u73af\u8bed\u53e5",children:"\u5faa\u73af\u8bed\u53e5"}),"\n",(0,r.jsx)(e.p,{children:"rust \u7ed9\u65e0\u9650\u5faa\u73af\u589e\u52a0\u4e86\u4e00\u4e2a loop,\u7ea6\u7b49\u4e8e while 1\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'loop {\n    println!("again and again!");\n}\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u4f46\u662f loop \u53ef\u4ee5\u901a\u8fc7 break \u6765\u8fd4\u56de\u4e00\u4e2a\u7ed3\u679c\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'let mut counter = 0;\n\nlet result = loop {\n    counter += 1;\n\n    if counter == 10 {\n        break counter * 2;\n    }\n};\n\nprintln!("The result is {result}");\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u5728\u5faa\u73af\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c goto \u7684 label \u5b9a\u4e49\uff0cbreak \u5230\u5bf9\u5e94\u5c42\u7ea7\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'let mut count = 0;\n    \'counting_up: loop {\n        println!("count = {count}");\n        let mut remaining = 10;\n\n        loop {\n            println!("remaining = {remaining}");\n            if remaining == 9 {\n                break;\n            }\n            if count == 2 {\n                break \'counting_up;\n            }\n            remaining -= 1;\n        }\n\n        count += 1;\n    }\n    println!("End count = {count}");\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u9664\u4e86 loop\uff0c\u5e38\u89c1\u7684 while \u4e5f\u662f\u6709\u7684\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'while true {\n        println!("again and again!");\n    }\n'})}),"\n",(0,r.jsx)(e.p,{children:'\u4ee5\u53ca for \u8bed\u53e5\uff0c\u4e0d\u540c\u4e8e c-like \u8bed\u8a00\uff0cfor \u8bed\u53e5\u662f\u8fed\u4ee3\u5668\u98ce\u683c\u7684\uff0c\u800c\u4e0d\u662f\u4e24\u4e2a";"\u4e09\u8bed\u53e5\u6a21\u5f0f\u3002'}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'let a = [10, 20, 30, 40, 50];\n\n    for element in a {\n        println!("the value is: {element}");\n    }\n\n    // \u6a21\u62df int i=1; i<4; i++\n     for number in (1..4).rev() {\n        println!("{number}!");\n    }\n'})}),"\n",(0,r.jsx)(e.h2,{id:"3\u51fd\u6570",children:"3\u3001\u51fd\u6570"}),"\n",(0,r.jsx)(e.p,{children:"\u51fd\u6570\u5206\u4e3a main \u51fd\u6570\u548c\u666e\u901a\u51fd\u6570\u3002main \u51fd\u6570\u662f\u53ef\u6267\u884c\u7a0b\u5e8f\u7684\u5165\u53e3\u51fd\u6570\u3002\u5bf9\u4e8e\u5e93\u662f\u4e0d\u9700\u8981\u7684\u3002main \u51fd\u6570\u672c\u8eab\u4e5f\u662f\u4e2a\u666e\u901a\u51fd\u6570 \u53ea\u662f\u51fd\u6570\u540d\u4e3a main\u3002"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'fn main() {\n        println!("Hello, world!");\n\n        another_function();\n    }\n\n    fn another_function() {\n        println!("Another function.");\n    }\n'})}),"\n",(0,r.jsxs)(e.p,{children:["\u4e0a\u9762\u8fd9\u4e2a\u662f\u4e0d\u5e26\u53c2\u6570\uff0c\u6ca1\u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570\u7684\u6700\u57fa\u672c\u5b9a\u4e49\u7ed3\u6784\u3002\u9996\u5148\u7528 fn \u5f00\u59cb\uff0c\u7136\u540e\u8ddf\u51fd\u6570\u540d\u4ee5\u53ca()\u3002\u6700\u540e\u7528",",\u62ec\u8d77\u6765 \u7684\u51fd\u6570\u903b\u8f91."]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"fn main() {\n    print_labeled_measurement(5, 'h');\n}\n\nfn print_labeled_measurement(value: i32, unit_label: char) {\n    println!(\"The measurement is: {value}{unit_label}\");\n}\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u5e26\u53c2\u6570\u7684\u51fd\u6570\uff0c\u5728()\u4e2d\u5b9a\u4e49\u53c2\u6570\uff0c\u53c2\u6570\u4e3a\u53c2\u6570\u540d:\u7c7b\u578b\u8fd9\u6837\u7684\u683c\u5f0f\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u5e26\u8fd4\u56de\u7684\u51fd\u6570\u5982\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'fn main() {\n    let x = plus_one(5);\n    println!("The value of x is: {x}");\n}\n\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n'})}),"\n",(0,r.jsxs)(e.p,{children:["\u5728\u53c2\u6570()\u548c\u51fd\u6570\u4f53","\u4e2d\u95f4\u7528-> \u5206\u5272\uff0c\u7f57\u5217\u8fd4\u56de\u503c\u7c7b\u578b\u3002"]}),"\n",(0,r.jsx)(e.p,{children:"\u8fd9\u91cc\u4f53\u73b0\u4e86\u8bed\u53e5\u548c\u8868\u8fbe\u5f0f\u7684\u533a\u522b\u3002\u8bed\u53e5\u662f\u6267\u884c\u4e00\u4e2a\u52a8\u4f5c\uff0c\u4e0d\u5177\u6709\u53ef\u4ee5\u4f5c\u4e3a\u76f4\u7684\u7ed3\u679c\u3002\u800c\u8868\u8fbe\u5f0f\u662f\u53ef\u4ee5\u4f5c\u4e3a\u503c\u7684\u7ed3\u679c\u7684\u3002 \u56e0\u6b64\u8fd9\u91cc\u8868\u8fbe\u5f0f x+1\uff0c\u4f5c\u4e3a\u503c\uff0c\u76f4\u63a5\u8fdb\u884c\u8303\u56f4\u3002\u6ce8\u610f\uff0c\u6b64\u65f6\u540e\u9762\u4e0d\u53ef\u4ee5\u52a0;\u3002"}),"\n",(0,r.jsx)(e.h2,{id:"4struct-\u548c-enum",children:"4\u3001struct \u548c enum"}),"\n",(0,r.jsx)(e.h3,{id:"struct",children:"struct"}),"\n",(0,r.jsx)(e.p,{children:"\u5b9a\u4e49\u7ed3\u6784\u4f53\u5982\u4e0b\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"struct User {\n    active: bool,\n    username: String,\n    email: String,\n    sign_in_count: u64,\n}\n"})}),"\n",(0,r.jsxs)(e.p,{children:["\u7ed3\u6784\u4e3a struct \u5173\u952e\u5b57\u52a0\u4e0a\u5927\u5199\u5f00\u5934\u7684\u7c7b\u578b\u540d,\u540e\u9762\u8ddf","\u5305\u88f9\u7684\u6210\u5458\u53d8\u91cf\uff0c\u6bcf\u4e2a\u6210\u5458\u53d8\u91cf\u4e3a\u6210\u5458\u540d\uff1a\u7c7b\u578b,\u3002"]}),"\n",(0,r.jsx)(e.p,{children:"struct \u7684\u521d\u59cb\u5316\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'let user1 = User {\n        email: String::from("someone@example.com"),\n        username: String::from("someusername123"),\n        active: true,\n        sign_in_count: 1,\n    };\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u5982\u679c\u7528\u5176\u4ed6 struct \u6765\u521d\u59cb\u5316\u540c\u7c7b\u578b\u65f6\uff0c\u53ef\u4ee5\u7528\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'let user2 = User {\n        email: String::from("another@example.com"),\n        ..user1\n    };\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u6709\u4e00\u79cd\u7279\u6b8a\u7684 struct,\u5143\u7ec4 struct:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'struct Color(i32, i32, i32);\n    struct Point(i32, i32, i32);\n\n    fn main() {\n        let black = Color(0, 0, 0);\n        let origin = Point(0, 0, 0);\n\n        println!("black 0:{}", black.0)\n    }\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u8fd8\u6709\u79cd\u66f4\u7279\u6b8a\u7684 struct\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"struct AlwaysEqual;\n\n    fn main() {\n        let subject = AlwaysEqual;\n    }\n"})}),"\n",(0,r.jsxs)(e.p,{children:["\u4ed6\u7684\u503c\u53ef\u4ee5\u662f",",\u6240\u4ee5\u5728\u4ee3\u7801\u4e2d\u770b\u5230","\u5c31\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u4e2a\u4e0d\u5360\u7a7a\u95f4\u7684 struct \u7684\u503c\uff0c\u6bd4\u5982:"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"Ok({})\n"})}),"\n",(0,r.jsx)(e.h3,{id:"enum",children:"enum"}),"\n",(0,r.jsx)(e.p,{children:"rust \u4e2d\u7684 enum \u6bd4\u4efb\u4f55\u5176\u4ed6\u8bed\u8a00\u7684\u90fd\u5f3a\u5927\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u7b80\u5355\u7248\u672c\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"enum IpAddrKind {\n        V4,\n        V6,\n    }\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u8fd9\u4e2a\u5bb9\u6613\u7406\u89e3\uff0c\u4f7f\u7528\u7684\u65f6\u5019\u5c31\u662f let four = IpAddrKind::V4;\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u6307\u5b9a\u7c7b\u578b\u7248\u672c\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"enum IpAddr {\n        V4(String),\n        V6(String),\n    }\n"})}),"\n",(0,r.jsx)(e.p,{children:'\u4f7f\u7528\u7684\u65f6\u5019\uff1alet home = IpAddr::V4(String::from("127.0.0.1")); \u8fd9\u5c31\u6709\u70b9\u4e0d\u50cf\u4f20\u7edf enum \u4e86\u3002\u66f4\u50cf\u4e00\u4e2a struct \u5b9a\u4e49\u3002 \u8fd9\u91cc"V4","V6"\u540c\u6837\u7684\u7c7b\u578b\uff0c\u8fd8\u4e0d\u76f4\u89c2\u3002'}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"struct Ipv4Addr {\n        // --snip--\n    }\n\n    struct Ipv6Addr {\n        // --snip--\n    }\n\n    enum IpAddr {\n        V4(Ipv4Addr),\n        V6(Ipv6Addr),\n    }\n"})}),"\n",(0,r.jsx)(e.p,{children:"V4 \u662f\u4e00\u4e2a\u7c7b\u578b\uff0cV6 \u662f\u4e00\u4e2a\u7c7b\u578b\u3002\u8fd9\u4e2a\u65f6\u5019 enum \u66f4\u50cf union\u3002\u4e5f\u8fd8\u597d\u7406\u89e3\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u6765\u4e2a\u4e0d\u5bb9\u6613\u770b\u7684\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"enum IpAddr {\n        V4(u8, u8, u8, u8),\n        V6(String),\n    }\n\n    let home = IpAddr::V4(127, 0, 0, 1);\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u8fd9\u91cc V4 \u53d8\u6210\u4e86\u4e00\u4e2a\u5143\u7ec4\u7c7b\u578b\u3002\u867d\u7136\u53ef\u8bfb\u6027\u5dee\u4e00\u70b9\uff0c\u4f46\u662f\u5199\u6cd5\u65b9\u4fbf\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u6700\u590d\u6742\u7684\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"enum Message {\n        Quit,\n        Move { x: i32, y: i32 },\n        Write(String),\n        ChangeColor(i32, i32, i32),\n    }\n"})}),"\n",(0,r.jsx)(e.p,{children:"Message \u5b9a\u4e49\u4e86\u4e00\u4e2a\u6e38\u620f\u7684\u6d88\u606f\u6307\u4ee4\uff0c\u8fd9\u91cc\u5728\u4f20\u7edf\u8bed\u8a00\u5982 C++\u4e2d\uff0c\u53ef\u80fd\u8981\u5b9a\u4e49\u4e2a Message \u57fa\u7c7b\uff0c\u7136\u540e\u6bcf\u4e2a\u547d\u4ee4\u6d88\u606f\u518d\u53bb\u5b9a\u4e49\u5b50\u7c7b\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u800c\u8fd9\u91cc\u4e00\u4e2a enum \u641e\u5b9a\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u8fd9\u4e2a enum \u771f\u4e0d\u597d\u8bf4\u4ed6\u662f\u4ec0\u4e48\u529f\u80fd\u3002"}),"\n",(0,r.jsx)(e.h3,{id:"\u7ed9-structenum-\u5b9a\u4e49\u65b9\u6cd5",children:"\u7ed9 struct/enum \u5b9a\u4e49\u65b9\u6cd5"}),"\n",(0,r.jsx)(e.p,{children:"\u7ed9 struct \u5b9a\u4e49\u65b9\u6cd5\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'#[derive(Debug)]\n    struct Rectangle {\n        width: u32,\n        height: u32,\n    }\n\n    impl Rectangle {\n        fn area(&self) -> u32 {\n            self.width * self.height\n        }\n    }\n\n    fn main() {\n        let rect1 = Rectangle {\n            width: 30,\n            height: 50,\n        };\n\n        println!(\n            "The area of the rectangle is {} square pixels.",\n            rect1.area()\n        );\n    }\n'})}),"\n",(0,r.jsxs)(e.p,{children:["\u4f7f\u7528 impl Xxx "," \u8bed\u6cd5\uff0c\u5728","\u7684\u65b9\u6cd5\uff0c\u5c31\u662f\u6210\u5458\u65b9\u6cd5\u3002"]}),"\n",(0,r.jsx)(e.p,{children:"\u5176\u4e2d\u4e0d\u5e26(&self)\u53c2\u6570\u7684\u662f\u7c7b\u65b9\u6cd5\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a(&self)\u7684\u4e3a\u7c7b\u65b9\u6cd5\u3002\u8fd9\u4e2a\u7c7b\u4f3c python2\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u7ed9 enum \u5b9a\u4e49\u4e5f\u662f\u4e00\u6837\uff0c\u7528 impl Xxx "}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'impl Message {\n        fn call(&self) {\n            // method body would be defined here\n        }\n    }\n\n    let m = Message::Write(String::from("hello"));\n    m.call();\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u679a\u4e3e\u7684\u5f3a\u5927\u8fd8\u4f53\u73b0\u5728\u4ed6\u7684\u4f7f\u7528\u4e0a\uff0c\u518d\u4e0d\u9700\u8981\u4e0a\u9762\u7684\u7c7b\u7ee7\u627f\u6765\u505a\u53cd\u5c04\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'pub enum NameRegistryInstruction {\n        Create {\n            hashed_name: Vec<u8>,\n            lamports: u64,\n            space: u32,\n        },\n\n        Update { offset: u32, data: Vec<u8> },\n\n        Transfer { new_owner: Pubkey },\n\n        Delete,\n\n        Realloc {\n            space: u32,\n        },\n    }\n\n    match instruction {\n        NameRegistryInstruction::Create {\n            hashed_name,\n            lamports,\n            space,\n        } => {\n            msg!("Instruction: Create");\n            Processor::process_create(program_id, accounts, hashed_name, lamports, space)?;\n        }\n        NameRegistryInstruction::Update { offset, data } => {\n            msg!("Instruction: Update Data");\n            Processor::process_update(accounts, offset, data)?;\n        }\n        NameRegistryInstruction::Transfer { new_owner } => {\n            msg!("Instruction: Transfer Ownership");\n            Processor::process_transfer(accounts, new_owner)?;\n        }\n        NameRegistryInstruction::Delete => {\n            msg!("Instruction: Delete Name");\n            Processor::process_delete(accounts)?;\n        }\n        NameRegistryInstruction::Realloc { space } => {\n            msg!("Instruction: Realloc Name Record");\n            Processor::process_realloc(accounts, space)?;\n        }\n    }\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u901a\u8fc7 match \u8bed\u53e5\uff0c\u9996\u5148\u80fd\u5bf9 enum \u505a\u7c7b\u578b\u5339\u914d\uff0c\u5339\u914d\u7684\u540c\u65f6\uff0c\u8fd8\u53ef\u4ee5\u5bf9\u7c7b\u578b\u505a\u89e3\u5305, \u5982 NameRegistryInstruction::Create"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"{\n            hashed_name,\n            lamports,\n            space,\n        }\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u8fd9\u91cc\u5176\u5b9e\u662f\u4e00\u4e2a\u6ca1\u6709\u7ed9\u540d\u5b57\u7684 struct\u3002"}),"\n",(0,r.jsx)(e.h2,{id:"5\u5bb9\u5668",children:"5\u3001\u5bb9\u5668"}),"\n",(0,r.jsx)(e.h3,{id:"listvector",children:"list/vector"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"Vec<T>\n"})}),"\n",(0,r.jsx)(e.p,{children:"vec \u662f std \u63d0\u4f9b\u7684\u94fe\u8868\u7c7b\u578b\u3002\u53ef\u4ee5\u7528\u6765\u5b58\u653e\u76f8\u540c\u7c7b\u578b\u7684\u6570\u7ec4\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u521b\u5efa\u6307\u5b9a\u7c7b\u578b\u7684 vector\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"let v: Vec<i32> = Vec::new();\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u4e5f\u53ef\u4ee5\u901a\u8fc7 vec!\u5b8f\u76f4\u63a5\u8d4b\u503c\u521d\u59cb\u5316\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"let v = vec![1, 2, 3];\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u589e\u52a0\u5143\u7d20\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"let mut v = Vec::new();\n\n    v.push(5);\n    v.push(6);\n    v.push(7);\n    v.push(8);\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u8fd9\u91cc mut \u8868\u793a vector \u662f\u53ef\u4ee5\u505a\u589e\u5220\u4fee\u6539\u7684\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u901a\u8fc7 remove \u8fdb\u884c\u5220\u9664\u5143\u7d20\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"let mut v = vec![1, 2, 3];\n    assert_eq!(v.remove(1), 2);\n    assert_eq!(v, [1, 3]);\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u53ef\u4ee5\u901a\u8fc7 get \u7ed9\u5b9a\u4e0b\u6807\uff0c\u83b7\u53d6 vector \u7684\u5143\u7d20\uff0c\u901a\u8fc7 Option \u6765\u505a\u5224\u65ad\u662f\u5426\u5b58\u5728\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'let v = vec![1, 2, 3, 4, 5];\n\n    let third: &i32 = &v[2];\n    println!("The third element is {third}");\n\n    let third: Option<&i32> = v.get(2);\n    match third {\n        Some(third) => println!("The third element is {third}"),\n        None => println!("There is no third element."),\n    }\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u901a\u8fc7\u8fed\u4ee3\u5668\uff0c\u904d\u5386\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'let v = vec![100, 32, 57];\n    for n_ref in &v {\n        // n_ref has type &i32\n        let n_plus_one: i32 = *n_ref + 1;\n        println!("{n_plus_one}");\n    }\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u4e0a\u9762\u8fd9\u4e2a\u662f\u53ea\u8bfb\u7684\uff0c\u5982\u679c\u9700\u8981\u4fee\u6539\uff0c\u4f7f\u7528\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"let mut v = vec![100, 32, 57];\n    for n_ref in &mut v {\n        // n_ref has type &mut i32\n        *n_ref += 50;\n    }\n"})}),"\n",(0,r.jsx)(e.h2,{id:"6string",children:"6\u3001String"}),"\n",(0,r.jsx)(e.p,{children:"rust \u7684 String \u4e0d\u662f\u57fa\u7840\u7c7b\u578b\uff0c\u662f\u7531 std \u63d0\u4f9b\u7684\u7c7b\u578b\u3002\u521b\u5efa\u5b57\u7b26\u4e32\u53ef\u4ee5\u7528\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'let mut s = String::new();\n\n    let data = "initial contents";\n    let s = data.to_string();\n\n\n    let s = String::from("initial contents");\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u4e09\u79cd\u65b9\u6cd5\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u4fee\u6539\u5b57\u7b26\u4e32\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'let mut s = String::from("foo");\n    s.push_str("bar");\n\n    let mut s1 = String::from("foo");\n    let s2 = "bar";\n    s1.push_str(s2);\n    println!("s2 is {s2}");\n\n    let mut s = String::from("lo");\n    s.push(\'l\');\n\n    let s1 = String::from("Hello, ");\n    let s2 = String::from("world!");\n    let s3 = s1 + &s2; // note s1 has been moved here and can no longer be used\n'})}),"\n",(0,r.jsx)(e.p,{children:'\u53ef\u4ee5\u4f7f\u7528 push_str\u3001push \u751a\u81f3\u662f"+"\u6765\u4fee\u6539\u5b57\u7b26\u4e32\u3002\u6ce8\u610f"+"\u4f1a borrow \u53d8\u91cf\u3002\u5f53\u7136\u8981\u4fee\u6539\u5b57\u7b26\u4e32\u524d\u63d0\u662f\u5b57\u7b26\u4e32\u662f"mut"\u7684\u3002'}),"\n",(0,r.jsx)(e.p,{children:"\u53ef\u4ee5\u901a\u8fc7\u4e0b\u6807\u64cd\u4f5c\u3002\u6216\u8005\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'let s1 = String::from("hello");\n    let h = s1[0];\n'})}),"\n",(0,r.jsx)(e.h2,{id:"7map",children:"7\u3001Map"}),"\n",(0,r.jsx)(e.p,{children:'rust \u4e2d\u7684 map \u4e5f\u4e0d\u662f\u57fa\u7840\u7c7b\u578b\uff0c\u800c\u662f std \u63d0\u4f9b\u7684\uff0c\u5e76\u4e14\u4e5f\u548c\u4e00\u822c\u8bed\u8a00\u4e2d\u4e0d\u4e00\u6837\uff0c\u7c7b\u4f3c Java \u91cc\u9762\u660e\u786e\u7684\u547d\u540d\u4e3a"HashMap"'}),"\n",(0,r.jsx)(e.p,{children:"\u521b\u5efa\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'use std::collections::HashMap;\n\n    let mut scores = HashMap::new();\n\n    scores.insert(String::from("Blue"), 10);\n    scores.insert(String::from("Yellow"), 50);\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u8bbf\u95ee\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'use std::collections::HashMap;\n\n    let mut scores = HashMap::new();\n\n    scores.insert(String::from("Blue"), 10);\n    scores.insert(String::from("Yellow"), 50);\n\n    let team_name = String::from("Blue");\n    let score = scores.get(&team_name).copied().unwrap_or(0);\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u904d\u5386\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'use std::collections::HashMap;\n\n    let mut scores = HashMap::new();\n\n    scores.insert(String::from("Blue"), 10);\n    scores.insert(String::from("Yellow"), 50);\n\n    for (key, value) in &scores {\n        println!("{key}: {value}");\n    }\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u63d2\u5165\u4fee\u6539\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'use std::collections::HashMap;\n\nlet mut scores = HashMap::new();\n\nscores.insert(String::from("Blue"), 10);\nscores.insert(String::from("Blue"), 25);\n\nprintln!("{:?}", scores);\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u5224\u65ad\u662f\u5426\u5b58\u5728\uff0c\u5b58\u5728\u624d\u63d2\u5165\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'use std::collections::HashMap;\n\n    let mut scores = HashMap::new();\n    scores.insert(String::from("Blue"), 10);\n\n    scores.entry(String::from("Yellow")).or_insert(50);\n    scores.entry(String::from("Blue")).or_insert(50);\n\n    println!("{:?}", scores);\n'})}),"\n",(0,r.jsx)(e.h2,{id:"8trait",children:"8\u3001trait"}),"\n",(0,r.jsx)(e.p,{children:"trait \u7c7b\u4f3c\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u63a5\u53e3\uff0c\u4f46\u662f\u5c31\u597d\u6bd4 enum \u4e00\u6837\uff0c\u4ed6\u4e0d\u4ec5\u7c7b\u4f3c\u5176\u4ed6\u8bed\u8a00\u7684\u63a5\u53e3\uff0c\u4ed6\u66f4\u5f3a\u5927\u3002 \u66f4\u590d\u6742\u3002\u5f88\u591a\u7ee7\u627f\u7684\u7279\u6027\u90fd\u662f\u901a\u8fc7 trait \u6765\u5b9e\u73b0\u3002"}),"\n",(0,r.jsx)(e.p,{children:"trait \u7684\u5b9a\u4e49\u7c7b\u4f3c struct:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"pub trait Summary {\n    fn summarize(&self) -> String;\n}\n"})}),"\n",(0,r.jsx)(e.p,{children:"trait \u4e3b\u8981\u662f\u5b9a\u4e49\u65b9\u6cd5\u3002\u8fd9\u91cc\u65b9\u6cd5\u5c31\u662f\u4e2a\u666e\u901a\u7684\u51fd\u6570\u5b9a\u4e49\u3002\u4f46\u662f\u53bb\u6389\u4e86\u53c2\u6570\u540d\u3002"}),"\n",(0,r.jsx)(e.p,{children:"trait \u53ea\u662f\u5b9a\u4e49\u4e86\u63a5\u53e3\u65b9\u6cd5\uff0c\u800c\u5177\u4f53\u5b9e\u73b0\u9700\u8981\u518d struct \u4e2d\u5b9e\u73b0\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'pub struct NewsArticle {\n    pub headline: String,\n    pub location: String,\n    pub author: String,\n    pub content: String,\n}\n\nimpl Summary for NewsArticle {\n    fn summarize(&self) -> String {\n        format!("{}, by {} ({})", self.headline, self.author, self.location)\n    }\n}\n\npub struct Tweet {\n    pub username: String,\n    pub content: String,\n    pub reply: bool,\n    pub retweet: bool,\n}\n\nimpl Summary for Tweet {\n    fn summarize(&self) -> String {\n        format!("{}: {}", self.username, self.content)\n    }\n}\n'})}),"\n",(0,r.jsx)(e.p,{children:'\u4f7f\u7528 impl \u5173\u952e\u5b57\uff0c\u8ddf\u8981\u5b9e\u73b0\u7684 trait \u540d\u52a0\u4e0a"for Xxx"\u7ed9\u5177\u4f53\u7684 struct \u89c6\u7ebf\u3002'}),"\n",(0,r.jsx)(e.p,{children:"\u8fd9\u91cc\u8fd8\u53ef\u4ee5\u518d trait \u4e2d\u7ed9\u51fa\u9ed8\u8ba4\u5b9e\u73b0\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'pub trait Summary {\n    fn summarize(&self) -> String {\n        String::from("(Read more...)")\n    }\n}\n'})}),"\n",(0,r.jsx)(e.p,{children:'\u8fd9\u6837\uff0c\u5728"impl"\u91cc\u9762\u6ca1\u6709"summarize"\u65b9\u6cd5\u5b9e\u73b0\u65f6\uff0c\u5c31\u9ed8\u8ba4\u7528 trait \u91cc\u9762\u7684\u5b9a\u4e49\u3002'}),"\n",(0,r.jsx)(e.p,{children:"trait \u7684\u4f5c\u7528\u4e3b\u8981\u8981\u7ed3\u5408\u6cdb\u578b\u9650\u5236\uff0c\u548c\u53c2\u6570\u4e13\u9012\u624d\u80fd\u4f53\u73b0\u3002\u6bd4\u5982\u7c7b\u4f3c\u5176\u4ed6\u8bed\u8a00\u4e2d\u57fa\u672c\u7684 OOP \u7684\u52a8\u6001\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'pub fn notify(item: &impl Summary) {\n    println!("Breaking news! {}", item.summarize());\n}\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u8fd9\u91cc\u5c06\u53c2\u6570\u58f0\u660e\u4e3a trait\uff0c\u4efb\u4f55\u5b9e\u73b0\u4e86\u8fd9\u4e2a traint \u7684\u7c7b\u578b\u90fd\u53ef\u4ee5\u4f20\u9012\u8fdb\u6765\u3002\u5177\u4f53\u7684 summarize \u662f \u4f20\u5165\u8fdb\u6765\u7684\u7c7b\u578b\u7684\u5b9e\u73b0\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u9664\u4e86\u53ef\u4ee5\u9650\u5236\u53c2\u6570\uff0c\u8fd8\u53ef\u4ee5\u9650\u5236\u8fd4\u56de\u503c\u3002\u8fd9\u4e2a\u5c31\u6709\u70b9\u7c7b\u4f3c\u5176\u4ed6\u8bed\u8a00\u7684\u57fa\u7c7b\u3001\u63a5\u53e3\u3002"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'fn returns_summarizable() -> impl Summary {\n    Tweet {\n        username: String::from("horse_ebooks"),\n        content: String::from(\n            "of course, as you probably already know, people",\n        ),\n        reply: false,\n        retweet: false,\n    }\n}\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u548c\u6cdb\u578b\u7684\u7ed3\u5408\uff0c\u89c1\u4e0b\u4e00\u7ae0\u3002"}),"\n",(0,r.jsx)(e.h2,{id:"9\u6cdb\u578b",children:"9\u3001\u6cdb\u578b"}),"\n",(0,r.jsx)(e.p,{children:"\u6cdb\u578b\u662f rust \u6700\u5f3a\u7684\u5730\u65b9\uff0c\u4e5f\u662f rust \u6700\u96be\u7684\u5730\u65b9\uff0c\u66f4\u662f\u5b66\u4e60 rust \u7684\u62e6\u8def\u864e\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u6765\u770b\u4e2a\u5b9a\u4e49\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"pub struct Iter<'a, K, V> {\n    db_iter: rocksdb::DBIterator<'a>,\n    _phantom: PhantomData<(K, V)>,\n}\n\nimpl<'a, K: DeserializeOwned, V: DeserializeOwned> Iter<'a, K, V> {\n    pub(super) fn new(db_iter: rocksdb::DBIterator<'a>) -> Self {\n        Self {\n            db_iter,\n            _phantom: PhantomData,\n        }\n    }\n}\n\nimpl<'a, K: DeserializeOwned, V: DeserializeOwned> Iterator for Iter<'a, K, V> {\n    type Item = (K, V);\n\n    fn next(&mut self) -> Option<Self::Item> {\n        let (key, value) = self.db_iter.next()?;\n        let key = bincode::deserialize(&key[PREFIX_LEN..]).ok()?;\n        let value = bincode::deserialize(&value).ok()?;\n\n        Some((key, value))\n    }\n}\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u611f\u89c9\u6b63\u5e38\u4eba\u90fd\u770b\u4e0d\u61c2\u8fd9\u4e2a\u662f\u4ec0\u4e48\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u56de\u5230\u6cdb\u578b\u57fa\u7840\u8bed\u6cd5\u4e0a\u6765\u3002\u5148\u6765\u770b\u5b9a\u4e49\u51fd\u6570\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"fn largest<T>(list: &[T]) -> &T {\n    let mut largest = &list[0];\n\n    for item in list {\n        if item > largest {\n            largest = item;\n        }\n    }\n\n    largest\n}\n\nfn main() {\n    let number_list = vec![34, 50, 25, 100, 65];\n\n    let result = largest(&number_list);\n    println!(\"The largest number is {}\", result);\n\n    let char_list = vec!['y', 'm', 'a', 'q'];\n\n    let result = largest(&char_list);\n    println!(\"The largest char is {}\", result);\n}\n"})}),"\n",(0,r.jsxs)(e.p,{children:['\u8fd9\u91cc\u5b9a\u4e49\u7684 largest \u51fd\u6570\uff0c\u540e\u9762\u63a5\u4e86"',(0,r.jsx)(e.code,{children:"<T>"}),'"\u8fd9\u4e2a\u8fd8\u7b97\u6b63\u5e38\uff0c\u5b66\u8fc7 C++\u90fd\u77e5\u9053\u8fd9\u91cc\u662f\u4e00\u4e2a\u6a21\u677f\u5b9a\u4e49\uff0c\u6216\u8005\u8bf4\u7c7b\u578b\u5b9a\u4e49\u3002\u540e\u7eed T \u4ee3\u8868\u7740\u4e00\u79cd\u7c7b\u578b\u3002']}),"\n",(0,r.jsx)(e.p,{children:"\u8fd8\u53ef\u4ee5\u51fa\u73b0\u5728\u7ed3\u6784\u4f53\u4e2d\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:'struct Point<T> {\n    x: T,\n    y: T,\n}\n\nimpl<T> Point<T> {\n    fn x(&self) -> &T {\n        &self.x\n    }\n}\n\nfn main() {\n    let p = Point { x: 5, y: 10 };\n\n    println!("p.x = {}", p.x());\n}\n'})}),"\n",(0,r.jsxs)(e.p,{children:['\u8fd9\u91cc"impl"\u4e5f\u8981\u52a0\u4e0a',(0,r.jsx)(e.code,{children:"<T>"})]}),"\n",(0,r.jsx)(e.p,{children:"\u4ee5\u53ca\u679a\u4e3e\u4e2d\uff0c\u5982\u5178\u578b\u7684 Result\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"enum Result<T, E> {\n        Ok(T),\n        Err(E),\n    }\n"})}),"\n",(0,r.jsxs)(e.p,{children:["\u5728\u540e\u9762\u6709\u4ecb\u7ecd\u751f\u547d\u5468\u671f\uff0c\u751f\u547d\u5468\u671f\u4e5f\u7c7b\u4f3c\u7c7b\u578b\uff0c\u4e5f\u9700\u8981\u653e\u5728\u8fd9\u91cc'",(0,r.jsx)(e.code,{children:"<>"}),"' \u5982\uff1a"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"pub struct Iter<'a, K, V> {\n        db_iter: rocksdb::DBIterator<'a>,\n        _phantom: PhantomData<(K, V)>,\n    }\n"})})]})}function o(n={}){const{wrapper:e}={...(0,l.a)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(u,{...n})}):u(n)}},7279:(n,e,s)=>{s.d(e,{Z:()=>a,a:()=>i});var r=s(959);const l={},t=r.createContext(l);function i(n){const e=r.useContext(t);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:i(n.components),r.createElement(t.Provider,{value:e},n.children)}}}]);